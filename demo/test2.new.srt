1
00:00:00,266 --> 00:00:01,600
浏览英文视频时

2
00:00:01,600 --> 00:00:03,366
点击生成中文总结

3
00:00:03,466 --> 00:00:04,733
一篇翻译精准

4
00:00:04,733 --> 00:00:07,000
高可用的摘要总结就有了

5
00:00:07,266 --> 00:00:08,466
嗨小伙伴们好

6
00:00:08,466 --> 00:00:10,966
欢迎来到浩叔的AI应用开发课

7
00:00:11,133 --> 00:00:13,733
上一讲我们使用的是 cursor

8
00:00:13,733 --> 00:00:15,600
实现了一个浏览器插件

9
00:00:15,866 --> 00:00:17,800
这一讲我们将给这个插件

10
00:00:17,800 --> 00:00:19,533
增加中文总结的功能

11
00:00:19,900 --> 00:00:21,866
cursor 实现功能的提示词

12
00:00:21,866 --> 00:00:23,400
我放在文稿中了

13
00:00:23,400 --> 00:00:25,266
你可以复现整个过程

14
00:00:25,566 --> 00:00:28,133
代码仓库的地址与工作流的文件

15
00:00:28,133 --> 00:00:29,766
我也放在文稿中了

16
00:00:29,800 --> 00:00:32,366
有需要的小伙伴评论区给我留言

17
00:00:32,566 --> 00:00:33,933
视频内容比较长

18
00:00:34,100 --> 00:00:35,066
建议收藏

19
00:00:35,133 --> 00:00:36,400
让我们开始吧

20
00:00:38,666 --> 00:00:41,333
接下来我们来配置一下 dify 的工作流

21
00:00:41,566 --> 00:00:44,166
我们中文总结的工作流非常简单

22
00:00:44,166 --> 00:00:45,566
它只有三个节点

23
00:00:45,800 --> 00:00:47,600
第一个节点就是开始节点

24
00:00:47,600 --> 00:00:49,600
我们配置一下两个参数

25
00:00:49,733 --> 00:00:52,300
第一个参数配置字幕的文本

26
00:00:52,400 --> 00:00:54,266
这里面最主要我们要调整一下

27
00:00:54,266 --> 00:00:55,400
最大的长度

28
00:00:55,400 --> 00:00:58,133
因为字幕的文本可能是非常长的

29
00:00:58,333 --> 00:01:01,733
第二个参数就是视频的标题

30
00:01:01,900 --> 00:01:04,166
视频的标题是非常重要的

31
00:01:04,500 --> 00:01:06,666
因为英文网站生成的

32
00:01:06,666 --> 00:01:07,800
第一条字幕

33
00:01:07,900 --> 00:01:09,933
它的翻译质量是非常差的

34
00:01:10,000 --> 00:01:12,166
我们传入视频的标题

35
00:01:12,766 --> 00:01:14,566
有利于大模型理解

36
00:01:14,566 --> 00:01:16,000
这个视频的主题

37
00:01:16,000 --> 00:01:18,466
对于我们翻译总结的精准度

38
00:01:18,466 --> 00:01:19,733
都有很大的帮助

39
00:01:20,533 --> 00:01:20,866
接下来

40
00:01:20,866 --> 00:01:23,000
我们来配置一下大模型的节点

41
00:01:23,100 --> 00:01:25,966
这里面我们使用了 claude 3.5 的模型

42
00:01:26,133 --> 00:01:29,566
你同样需要去注册一下 claude 3.5

43
00:01:29,566 --> 00:01:31,400
去获取它对应的 API

44
00:01:31,533 --> 00:01:33,766
这是我的 claude 账号

45
00:01:33,800 --> 00:01:36,933
你会在底部找到 API console

46
00:01:37,200 --> 00:01:38,400
点进去之后

47
00:01:38,400 --> 00:01:41,400
就会跳转到控制台里面

48
00:01:41,400 --> 00:01:43,900
你刚开始其实是看不到这个控制台的

49
00:01:43,900 --> 00:01:47,733
你需要去注册一个对应的 API 账号

50
00:01:47,733 --> 00:01:49,500
需要填写一些信息

51
00:01:49,566 --> 00:01:50,400
然后绑定一下

52
00:01:50,400 --> 00:01:51,933
对应的支付信用卡

53
00:01:52,066 --> 00:01:54,266
绑定完支付信用卡之后

54
00:01:54,300 --> 00:01:56,266
就可以去创建一个 API key

55
00:01:56,533 --> 00:01:58,366
创建完 API key 之后

56
00:01:58,566 --> 00:02:01,966
你就可以回到我们的 dify 界面

57
00:02:01,966 --> 00:02:03,166
点击用户

58
00:02:03,300 --> 00:02:04,866
找到对应的设置

59
00:02:05,366 --> 00:02:07,666
设置里面点开模型供应商

60
00:02:07,666 --> 00:02:10,266
里面找到 claude 的模型供应商

61
00:02:10,500 --> 00:02:13,533
配置一下对应的 API key 就可以了

62
00:02:13,766 --> 00:02:15,700
API key 配置完了之后

63
00:02:15,700 --> 00:02:16,866
回到我们的界面

64
00:02:16,966 --> 00:02:18,666
有小伙伴问浩叔一个问题

65
00:02:18,666 --> 00:02:20,500
就是大模型的三个角色

66
00:02:20,500 --> 00:02:22,066
应该怎么去配置

67
00:02:22,333 --> 00:02:22,900
一个系统

68
00:02:22,900 --> 00:02:23,700
一个用户

69
00:02:23,700 --> 00:02:24,600
一个助手

70
00:02:24,600 --> 00:02:27,166
他们各自承担的是什么职责

71
00:02:27,166 --> 00:02:29,966
第一系统提示词是用来配置

72
00:02:30,066 --> 00:02:32,066
设定你的上下文和规则

73
00:02:32,066 --> 00:02:34,000
以及告诉大模型

74
00:02:34,000 --> 00:02:35,766
你输出的结构

75
00:02:35,766 --> 00:02:37,666
可以是什么样子的

76
00:02:37,666 --> 00:02:38,166
举个例子

77
00:02:38,166 --> 00:02:39,866
这里面我告诉它

78
00:02:39,866 --> 00:02:41,700
你是一个专业的字幕翻译

79
00:02:41,700 --> 00:02:43,200
和内容总结的专家

80
00:02:43,200 --> 00:02:44,500
你的任务是

81
00:02:44,500 --> 00:02:46,300
对你的价值的要求

82
00:02:46,500 --> 00:02:47,800
要求它总结的时候

83
00:02:47,800 --> 00:02:49,400
遵循我们的一些规则

84
00:02:49,400 --> 00:02:52,600
1、2、3、4、5点 最后我们给它提了一个要求

85
00:02:52,666 --> 00:02:54,700
要求它输出的结构

86
00:02:54,733 --> 00:02:56,866
是符合我们这个要求的

87
00:02:56,866 --> 00:02:58,700
这里我给它举了一个例子

88
00:02:59,466 --> 00:03:01,100
这个就是系统提示词

89
00:03:01,266 --> 00:03:03,533
user 就是用户的输入

90
00:03:03,700 --> 00:03:06,066
比如说我们把字幕的内容

91
00:03:06,066 --> 00:03:08,666
视频的主题给它放在这个区

92
00:03:08,800 --> 00:03:11,066
这个对应的就是我们的变量

93
00:03:11,066 --> 00:03:13,300
我们可以选择对应的 title

94
00:03:13,300 --> 00:03:14,766
我们的视频主题的

95
00:03:14,766 --> 00:03:16,766
变量 同样的字幕内容

96
00:03:16,766 --> 00:03:18,733
我们也可以选择对应的

97
00:03:18,733 --> 00:03:21,333
变量 助手的话

98
00:03:21,333 --> 00:03:23,533
这里面你可以用来控制

99
00:03:23,666 --> 00:03:25,100
大模型的输出

100
00:03:25,200 --> 00:03:27,366
这里比如说你可以配置

101
00:03:27,366 --> 00:03:28,966
帮我输出成一个 JSON
102
00:03:28,966 --> 00:03:30,700
再配置一下结束的节点

103
00:03:30,700 --> 00:03:33,200
我们把大模型的输出绑定上

104
00:03:33,200 --> 00:03:34,533
大模型的输出

105
00:03:34,600 --> 00:03:36,166
那我们来验证一下

106
00:03:36,333 --> 00:03:37,166
运行一下

107
00:03:37,266 --> 00:03:38,966
这里面有两个变量

108
00:03:38,966 --> 00:03:40,300
你需要去填的

109
00:03:40,333 --> 00:03:41,200
字幕的文本

110
00:03:41,200 --> 00:03:43,733
我文稿里面有一个测试文本

111
00:03:43,866 --> 00:03:45,266
这个测试文本

112
00:03:45,266 --> 00:03:48,100
大家可以看到它其实有很多错误

113
00:03:48,100 --> 00:03:50,000
比如说典型的dify这个词

114
00:03:50,000 --> 00:03:51,500
它从来就没有拼对过

115
00:03:51,766 --> 00:03:52,900
这特别搞笑

116
00:03:52,900 --> 00:03:54,800
你比如说DFI

117
00:03:55,066 --> 00:03:59,400
DFY等等其实都是一些错误的词

118
00:03:59,400 --> 00:04:01,266
那么大模型是很强大的

119
00:04:01,266 --> 00:04:02,566
它会把那个

120
00:04:02,600 --> 00:04:04,600
错误措辞都给它纠正过来

121
00:04:04,766 --> 00:04:06,966
这是我们的测试数据

122
00:04:07,000 --> 00:04:08,700
那我们点击开始运行

123
00:04:08,700 --> 00:04:09,966
它已经开始运行了

124
00:04:10,166 --> 00:04:11,933
这里面有个运转的标志

125
00:04:11,933 --> 00:04:13,500
那大家可以看到这里

126
00:04:13,500 --> 00:04:14,566
它已经输出好了

127
00:04:14,700 --> 00:04:16,933
整体上精准度和准确性

128
00:04:16,933 --> 00:04:18,533
还是非常可观的

129
00:04:18,533 --> 00:04:20,900
大家可以看到包括错误的词

130
00:04:20,900 --> 00:04:21,966
那个dify

131
00:04:22,000 --> 00:04:23,333
它全部纠正过来了

132
00:04:23,333 --> 00:04:24,200
搭建好了之后

133
00:04:24,200 --> 00:04:26,300
那我们就可以选择发布

134
00:04:26,300 --> 00:04:27,333
发布完了之后

135
00:04:27,333 --> 00:04:29,966
就可以选择访问API

136
00:04:30,566 --> 00:04:31,933
到了访问API里面

137
00:04:31,933 --> 00:04:34,466
这里面你去创建一个API密钥

138
00:04:34,733 --> 00:04:35,666
到密钥之后

139
00:04:35,666 --> 00:04:37,066
你在应用开发的时候

140
00:04:37,066 --> 00:04:40,066
就可以用这个密钥来调dify的接口

141
00:04:40,066 --> 00:04:41,866
来获取总结的内容

142
00:04:43,300 --> 00:04:45,666
我们来看一下程序实现的步骤

143
00:04:45,733 --> 00:04:46,866
总共有4步

144
00:04:46,966 --> 00:04:49,366
第一步我们在配置页面里面增加中

145
00:04:49,366 --> 00:04:52,000
文总结的dify API key的配置

146
00:04:52,133 --> 00:04:53,066
第二步

147
00:04:53,066 --> 00:04:54,500
我们在插件界面里面

148
00:04:54,500 --> 00:04:57,000
去增加生成中文总结的按钮

149
00:04:57,666 --> 00:04:58,466
第三步

150
00:04:58,500 --> 00:05:01,666
去实现点击按钮调用dify的API

151
00:05:01,800 --> 00:05:04,000
我们要传入字幕内容

152
00:05:04,000 --> 00:05:06,166
和字幕标题的两个参数

153
00:05:06,300 --> 00:05:08,700
第四步接收到流式数据之后

154
00:05:08,700 --> 00:05:11,000
我们输出对应的总结文本

155
00:05:11,100 --> 00:05:13,400
那我们先来复制第一个提示词

156
00:05:13,400 --> 00:05:14,766
使用Command+I

157
00:05:15,500 --> 00:05:17,966
然后唤起cursor的界面

158
00:05:18,000 --> 00:05:20,800
这里面我们让它更新一下

159
00:05:20,800 --> 00:05:22,700
我们的HTML视图

160
00:05:22,700 --> 00:05:24,533
就是我们的管理页面

161
00:05:24,866 --> 00:05:25,666
大家可以看到

162
00:05:25,666 --> 00:05:28,166
它给我们新增加了一个新的input

163
00:05:28,300 --> 00:05:30,866
用于存放总结的dify的API key

164
00:05:31,066 --> 00:05:32,533
那我们接受它的变更

165
00:05:33,333 --> 00:05:33,866
第二步

166
00:05:33,866 --> 00:05:36,066
我们要实现点击保存按钮

167
00:05:36,066 --> 00:05:38,966
把这个key持久化的程序

168
00:05:38,966 --> 00:05:40,266
然后复制一下

169
00:05:40,466 --> 00:05:42,466
我们告诉它点击保存之后

170
00:05:42,533 --> 00:05:44,533
把我们这个输入的对应的key

171
00:05:44,533 --> 00:05:45,766
持久化存储

172
00:05:45,866 --> 00:05:48,600
并设置在summary key的变量之中

173
00:05:48,600 --> 00:05:50,300
它修改了对应的脚本

174
00:05:50,300 --> 00:05:51,800
就是popup.js

175
00:05:51,800 --> 00:05:53,933
大家可以看到它的那个

176
00:05:54,100 --> 00:05:56,866
代码已经成功生成好了

177
00:05:56,966 --> 00:05:58,333
那我们来验证一下

178
00:05:58,333 --> 00:06:00,133
这个代码是否成功

179
00:06:00,266 --> 00:06:01,700
我们先保存给它

180
00:06:01,700 --> 00:06:03,666
我们回到接受它的变更

181
00:06:03,666 --> 00:06:04,933
让我们到扩展程序

182
00:06:05,066 --> 00:06:07,700
里面去reload一下我们的插件

183
00:06:07,700 --> 00:06:08,866
刷新一下我们视频

184
00:06:08,866 --> 00:06:10,866
看一下我们的插件的配置

185
00:06:10,933 --> 00:06:13,566
大家可以看到它已经有两个input

186
00:06:13,800 --> 00:06:16,200
这两个input就可以用来存储变量

187
00:06:16,766 --> 00:06:18,000
那我们复制一下

188
00:06:18,066 --> 00:06:20,600
之前上一步生成的那个API key

189
00:06:21,400 --> 00:06:23,600
就是在这里找到我们的API key

190
00:06:24,900 --> 00:06:25,766
复制进去

191
00:06:25,800 --> 00:06:26,800
好保存成功

192
00:06:26,800 --> 00:06:27,966
那我们可以刷新一下

193
00:06:27,966 --> 00:06:29,866
看它有没有持久化保存下来

194
00:06:29,866 --> 00:06:32,700
大家可以看到它持久化保存下来了

195
00:06:32,866 --> 00:06:34,466
那我们接下来要实现

196
00:06:34,466 --> 00:06:36,400
往这里面添加对应的按钮

197
00:06:36,400 --> 00:06:37,700
回到我们的文稿

198
00:06:37,900 --> 00:06:39,500
找到我们对应的提示词

199
00:06:39,500 --> 00:06:40,766
输入我们的提示词

200
00:06:41,400 --> 00:06:44,566
在生成按钮的生成文稿中生成好了

201
00:06:44,666 --> 00:06:46,200
那大家可以看到它

202
00:06:46,200 --> 00:06:49,466
这里面会告诉你修改了哪一个文件
以下是优化后的中文字幕:

1
00:00:00,266 --> 00:00:01,600
浏览英文视频时

2
00:00:01,600 --> 00:00:03,366
点击生成中文总结

3
00:00:03,466 --> 00:00:04,733
一篇翻译精准

4
00:00:04,733 --> 00:00:07,000
高可用的摘要总结就有了

5
00:00:07,266 --> 00:00:08,466
嗨小伙伴们好

6
00:00:08,466 --> 00:00:10,966
欢迎来到浩叔的AI音乐开发课

7
00:00:11,133 --> 00:00:13,733
上一讲我们使用的cursor加dify

8
00:00:13,733 --> 00:00:15,600
实现了一个浏览器的插件

9
00:00:15,866 --> 00:00:17,800
这一讲我们将给这个插件

10
00:00:17,800 --> 00:00:19,533
增加中文总结的功能

11
00:00:19,900 --> 00:00:21,866
cursor实现功能的提示词

12
00:00:21,866 --> 00:00:23,400
我放在文稿中了

13
00:00:23,400 --> 00:00:25,266
你可以复现整个过程

14
00:00:25,566 --> 00:00:28,133
代码仓库的地址与工作流的文件

15
00:00:28,133 --> 00:00:29,766
我也放在文稿中了

16
00:00:29,800 --> 00:00:32,366
有需要的小伙伴评论区给我留言

17
00:00:32,566 --> 00:00:33,933
视频内容比较长

18
00:00:34,100 --> 00:00:35,066
建议收藏

19
00:00:35,133 --> 00:00:36,400
让我们开始吧

20
00:00:38,666 --> 00:00:41,333
接下来我们来配置一下dify的工作流

21
00:00:41,566 --> 00:00:44,166
那我们中文总结的工作流非常的简单

22
00:00:44,166 --> 00:00:45,566
它只有三个节点

23
00:00:45,800 --> 00:00:47,600
那么第一个节点就是开始节点

24
00:00:47,600 --> 00:00:49,600
我们配置一下两个参数

25
00:00:49,733 --> 00:00:52,300
第一个参数配置字幕的文本

26
00:00:52,400 --> 00:00:54,266
这里面最主要我们要调整一下

27
00:00:54,266 --> 00:00:55,400
最大的长度

28
00:00:55,400 --> 00:00:58,133
因为它字幕的文本可能是非常长的

29
00:00:58,333 --> 00:01:01,733
那第二个参数就是视频的标题

30
00:01:01,900 --> 00:01:04,166
视频的标题都是非常重要的

31
00:01:04,500 --> 00:01:06,666
因为英文网站是它生成的

32
00:01:06,666 --> 00:01:07,800
第一条字幕

33
00:01:07,900 --> 00:01:09,933
它的翻译质量是非常差的

34
00:01:10,000 --> 00:01:12,166
那我们传入视频的标题

35
00:01:12,766 --> 00:01:14,566
有利于大模型理解

36
00:01:14,566 --> 00:01:16,000
这个视频的主题

37
00:01:16,000 --> 00:01:18,466
对于我们翻译总结的精准度

38
00:01:18,466 --> 00:01:19,733
都有很大的帮助

39
00:01:20,533 --> 00:01:20,866
接下来

40
00:01:20,866 --> 00:01:23,000
我们来配置一下大模型的节点

41
00:01:23,100 --> 00:01:25,966
这里面我们使用了claude 3.5的模型

42
00:01:26,133 --> 00:01:29,566
那你同样的也要去注册一下claude 3.5

43
00:01:29,566 --> 00:01:31,400
去拿到它对应的API

44
00:01:31,533 --> 00:01:33,766
这是我的claude的账号

45
00:01:33,800 --> 00:01:36,933
你会在底部找到API console

46
00:01:37,200 --> 00:01:38,400
点进去之后

47
00:01:38,400 --> 00:01:41,400
就会跳转到控制台里面

48
00:01:41,400 --> 00:01:43,900
你刚开始其实是看不到这个控制台的

49
00:01:43,900 --> 00:01:47,733
你需要去注册一个对应的API账号

50
00:01:47,733 --> 00:01:49,500
需要填写一些信息

51
00:01:49,566 --> 00:01:50,400
然后绑定一下

52
00:01:50,400 --> 00:01:51,933
对应的支付信用卡

53
00:01:52,066 --> 00:01:54,266
绑定完支付信用卡之后

54
00:01:54,300 --> 00:01:56,266
就可以去创建一个API key

55
00:01:56,533 --> 00:01:58,366
创建完API key之后

56
00:01:58,566 --> 00:02:01,966
你就可以回到我们的dify界面

57
00:02:01,966 --> 00:02:03,166
点击用户

58
00:02:03,300 --> 00:02:04,866
找到对应的设置

59
00:02:05,366 --> 00:02:07,666
设置里面点开模型供应商

60
00:02:07,666 --> 00:02:10,266
里面找到claude的模型供应商

61
00:02:10,500 --> 00:02:13,533
配置一下对应的API key就可以了

62
00:02:13,766 --> 00:02:15,700
那API key配置完了之后

63
00:02:15,700 --> 00:02:16,866
回到我们的界面

64
00:02:16,966 --> 00:02:18,666
有小伙伴问浩叔一个问题

65
00:02:18,666 --> 00:02:20,500
就是大模型的三个角色

66
00:02:20,500 --> 00:02:22,066
应该怎么去配置

67
00:02:22,333 --> 00:02:22,900
一个系统

68
00:02:22,900 --> 00:02:23,700
一个用户

69
00:02:23,700 --> 00:02:24,600
一个助手

70
00:02:24,600 --> 00:02:27,166
那么他们各自承担的是什么职责

71
00:02:27,166 --> 00:02:29,966
第一系统提示词是用来配置

72
00:02:30,066 --> 00:02:32,066
上下文跟规则

73
00:02:32,066 --> 00:02:34,000
以及告诉大模型

74
00:02:34,000 --> 00:02:35,766
你输出的结构

75
00:02:35,766 --> 00:02:37,666
可以是什么样子的

76
00:02:37,666 --> 00:02:38,166
举个例子

77
00:02:38,166 --> 00:02:39,866
这里面我告诉他说

78
00:02:39,866 --> 00:02:41,700
你是一个专业的字幕翻译

79
00:02:41,700 --> 00:02:43,200
跟内容总结的专家

80
00:02:43,200 --> 00:02:44,500
你的任务是

81
00:02:44,500 --> 00:02:46,300
对你的价值的要求

82
00:02:46,500 --> 00:02:47,800
奇幻他的总结的时候

83
00:02:47,800 --> 00:02:49,400
遵循我们的一些规则

84
00:02:49,400 --> 00:02:52,600
12345点最后我们给他提了一个要求

85
00:02:52,666 --> 00:02:54,700
奇幻他输出的结构

86
00:02:54,733 --> 00:02:56,866
老师是符合我们这个要求的

87
00:02:56,866 --> 00:02:58,700
这里我给他举了一个例子

88
00:02:59,466 --> 00:03:01,100
这个就是系统提示词

89
00:03:01,266 --> 00:03:03,533
那user就是用户的输入

90
00:03:03,700 --> 00:03:06,066
比如说我们把字幕的内容

91
00:03:06,066 --> 00:03:08,666
视频的主题给它放在这个区

92
00:03:08,800 --> 00:03:11,066
这个对应的就是我们的变量

93
00:03:11,066 --> 00:03:13,300
那我们可以选择对应的title

94
00:03:13,300 --> 00:03:14,766
我们的视频这个主题的

95
00:03:14,766 --> 00:03:16,766
变量同样的字幕的内容

96
00:03:16,766 --> 00:03:18,733
那我们也可以选择对应的

97
00:03:18,733 --> 00:03:21,333
我们的变量助手的话

98
00:03:21,333 --> 00:03:23,533
这里面你可以用来控制

99
00:03:23,666 --> 00:03:25,100
大模型的输出

100
00:03:25,200 --> 00:03:27,366
那这里比如说你可以配置说

101
00:03:27,366 --> 00:03:28,966
帮我输出成一个JSON

102
00:03:28,966 --> 00:03:30,700
再配置一下结束的节点

103
00:03:30,700 --> 00:03:33,200
我们把大模型的绑定上

104
00:03:33,200 --> 00:03:34,533
大模型的输出

105
00:03:34,600 --> 00:03:36,166
那我们来验证一下

106
00:03:36,333 --> 00:03:37,166
运行一下

107
00:03:37,266 --> 00:03:38,966
这里面有两个变量

108
00:03:38,966 --> 00:03:40,300
你需要去填的

109
00:03:40,333 --> 00:03:41,200
字幕的文本

110
00:03:41,200 --> 00:03:43,733
我文稿里面有一个测试的文本

111
00:03:43,866 --> 00:03:45,266
那这个测试的文本

112
00:03:45,266 --> 00:03:48,100
大家可以看到它其实有很多的错误

113
00:03:48,100 --> 00:03:50,000
比如说典型的dify这个词

114
00:03:50,000 --> 00:03:51,500
它从来就没有拼对过

115
00:03:51,766 --> 00:03:52,900
这特别的搞笑

116
00:03:52,900 --> 00:03:54,800
你比如说DFI

117
00:03:55,066 --> 00:03:59,400
DFY等等其实都是一些错误的词

118
00:03:59,400 --> 00:04:01,266
那么大模型是很强大的

119
00:04:01,266 --> 00:04:02,566
它会把那些

120
00:04:02,600 --> 00:04:04,600
措辞都给它纠正过来

121
00:04:04,766 --> 00:04:06,966
这是我们的一个测试的数据

122
00:04:07,000 --> 00:04:08,700
那我们点击开始运行

123
00:04:08,700 --> 00:04:09,966
它已经开始运行了

124
00:04:10,166 --> 00:04:11,933
这里面有个运转的标志

125
00:04:11,933 --> 00:04:13,500
那大家可以看到这里

126
00:04:13,500 --> 00:04:14,566
他已经输出好了

127
00:04:14,700 --> 00:04:16,933
整体上精准度跟主题

128
00:04:16,933 --> 00:04:18,533
还是非常可观的

129
00:04:18,533 --> 00:04:20,900
大家可以看到包括他错误的词

130
00:04:20,900 --> 00:04:21,966
那个dify

131
00:04:22,000 --> 00:04:23,333
他全部纠正过来了

132
00:04:23,333 --> 00:04:24,200
搭建好了之后

133
00:04:24,200 --> 00:04:26,300
那我们就可以选择发布

134
00:04:26,300 --> 00:04:27,333
发布完了之后

135
00:04:27,333 --> 00:04:29,966
那么你就可以选择访问API

136
00:04:30,566 --> 00:04:31,933
到了访问API里面

137
00:04:31,933 --> 00:04:34,466
这里面你去创建一个API的密钥

138
00:04:34,733 --> 00:04:35,666
到密钥之后

139
00:04:35,666 --> 00:04:37,066
你在应用开发的时候

140
00:04:37,066 --> 00:04:40,066
就可以用这个密钥来调dify的接口

141
00:04:40,066 --> 00:04:41,866
来获取总结的内容

142
00:04:43,300 --> 00:04:45,666
我们来看一下程序实现的步骤

143
00:04:45,733 --> 00:04:46,866
总共有4步

144
00:04:46,966 --> 00:04:49,366
第一步我们在配置页面里面增加中

145
00:04:49,366 --> 00:04:52,000
文总结的dify API key的配置

146
00:04:52,133 --> 00:04:53,066
那第二步的话

147
00:04:53,066 --> 00:04:54,500
我们在插件界面里面

148
00:04:54,500 --> 00:04:57,000
去增加生成中文总结的按钮

149
00:04:57,666 --> 00:04:58,466
那第三步

150
00:04:58,500 --> 00:05:01,666
去实现点击按钮调用dify的API

151
00:05:01,800 --> 00:05:04,000
那要我们要传入字幕内容

152
00:05:04,000 --> 00:05:06,166
跟字幕标题的两个参数

153
00:05:06,300 --> 00:05:08,700
那第四步接收到流式的数据之后

154
00:05:08,700 --> 00:05:11,000
我们输出对应的总结文本

155
00:05:11,100 --> 00:05:13,400
那我们先来复制第一个提示词

156
00:05:13,400 --> 00:05:14,766
使用command加i

157
00:05:15,500 --> 00:05:17,966
然后唤起cursor的界面

158
00:05:18,000 --> 00:05:20,800
那这里面我们让他更新一下

159
00:05:20,800 --> 00:05:22,700
我们的html制图

160
00:05:22,700 --> 00:05:24,533
就是我们的管理页面

161
00:05:24,866 --> 00:05:25,666
大家可以看到

162
00:05:25,666 --> 00:05:28,166
他给我们新增加了一个新的input

163
00:05:28,300 --> 00:05:30,866
用于存放总结的dify的API key

164
00:05:31,066 --> 00:05:32,533
那我们接受它的变更

165
00:05:33,333 --> 00:05:33,866
那第二步

166
00:05:33,866 --> 00:05:36,066
我们要实现一个点击保存按钮

167
00:05:36,066 --> 00:05:38,966
把这个key持久化的程序

168
00:05:38,966 --> 00:05:40,266
然后复制一下

169
00:05:40,466 --> 00:05:42,466
我们告诉他点击保存之后

170
00:05:42,533 --> 00:05:44,533
把我们这个输入的对应的key

171
00:05:44,533 --> 00:05:45,766
持久化存储

172
00:05:45,866 --> 00:05:48,600
并设置在summary key的变量之中

173
00:05:48,600 --> 00:05:50,300
它修改了对应的脚本

174
00:05:50,300 --> 00:05:51,800
就是Pro up点js

175
00:05:51,800 --> 00:05:53,933
大家可以看到它的那一个

176
00:05:54,100 --> 00:05:56,866
那它代码已经成功生成好了

177
00:05:56,966 --> 00:05:58,333
那我们来验证一下

178
00:05:58,333 --> 00:06:00,133
这个代码是否成功

179
00:06:00,266 --> 00:06:01,700
我们先保存给他

180
00:06:01,700 --> 00:06:03,666
我们回到接受他的变更

181
00:06:03,666 --> 00:06:04,933
让我们到扩展程序

182
00:06:05,066 --> 00:06:07,700
程序里面去reload一下我们的插件

183
00:06:07,700 --> 00:06:08,866
刷新一下我们视频

184
00:06:08,866 --> 00:06:10,866
看一下我们的插件的配置

185
00:06:10,933 --> 00:06:13,566
大家可以看到它已经有两个input

186
00:06:13,800 --> 00:06:16,200
两个input就可以用来存储变量

187
00:06:16,766 --> 00:06:18,000
那我们复制一下

188
00:06:18,066 --> 00:06:20,600
之前上一步生成的那个API key

189
00:06:21,400 --> 00:06:23,600
就是在这里找到我们的API key

190
00:06:24,900 --> 00:06:25,766
复制进去

191
00:06:25,800 --> 00:06:26,800
好保存成功

192
00:06:26,800 --> 00:06:27,966
那我们可以刷新一下

193
00:06:27,966 --> 00:06:29,866
看他有没有持久化保存下来

194
00:06:29,866 --> 00:06:32,700
大家可以看到他持久化保存下来了

195
00:06:32,866 --> 00:06:34,466
那我们接下来要实现

196
00:06:34,466 --> 00:06:36,400
往这里面添加对应的按钮

197
00:06:36,400 --> 00:06:37,700
回到我们的文稿

198
00:06:37,900 --> 00:06:39,500
找到我们对应的提示词

199
00:06:39,500 --> 00:06:40,766
输入我们的提示词

200
00:06:41,400 --> 00:06:44,566
在生成按钮的生成文稿中生成好了

201
00:06:44,666 --> 00:06:46,200
那大家可以看到它

202
00:06:46,200 --> 00:06:49,466
这里面会告诉你修改了哪一个文件

203
00:06:49,466 --> 00:06:50,500
它修改了Pro up

204
00:06:50,500 --> 00:06:52,533
点html的一个文件

205
00:06:52,566 --> 00:06:55,666
那我们到这个up点html

206
00:06:55,666 --> 00:06:57,500
可以看到他修改的内容

207
00:06:57,500 --> 00:07:00,133
那你也可以局部接受他的变更

208
00:07:00,166 --> 00:07:02,800
那就是在这里面command加n

209
00:07:02,800 --> 00:07:03,966
那局部变更

210
00:07:04,166 --> 00:07:06,166
那你也可以点全部接受

211
00:07:06,300 --> 00:07:07,966
那我这里面点全部接受

212
00:07:07,966 --> 00:07:11,300
好了那他按钮已经生成好了

213
00:07:11,300 --> 00:07:13,000
那我们接下来要让他实现

214
00:07:13,000 --> 00:07:14,066
按钮的逻辑

215
00:07:14,066 --> 00:07:16,166
那这一步会相对比较复杂一点

216
00:07:16,200 --> 00:07:17,566
逻辑是这样子的

217
00:07:17,566 --> 00:07:19,800
我们希望他点击按钮之后

218
00:07:19,800 --> 00:07:22,066
去调用dify API的key

219
00:07:22,300 --> 00:07:24,066
去调用的参考代码

220
00:07:24,066 --> 00:07:25,333
都给他放进来了

221
00:07:25,333 --> 00:07:26,300
那参考的代码

222
00:07:26,300 --> 00:07:28,166
可以看一下dify的文档

223
00:07:29,066 --> 00:07:30,933
有一个这样子的示例代码

224
00:07:30,933 --> 00:07:32,966
我们把它复制过来就可以了

225
00:07:33,000 --> 00:07:35,066
大模型会按照我们的举例

226
00:07:35,066 --> 00:07:37,333
去生成对应的调用代码

227
00:07:37,733 --> 00:07:38,733
我们回到文稿

228
00:07:38,733 --> 00:07:41,133
告诉他title是视频的标题

229
00:07:41,266 --> 00:07:43,800
那么Ctrl是英文字幕的内容

230
00:07:43,800 --> 00:07:46,800
那API key让它使用我们的summary key

231
00:07:46,966 --> 00:07:48,666
前面设置的那个变量

232
00:07:48,900 --> 00:07:50,533
还要告诉他一个规则API

233
00:07:50,533 --> 00:07:51,800
是流式输出的

234
00:07:51,800 --> 00:07:53,866
那前端需要流式读取数据

235
00:07:53,866 --> 00:07:54,933
将返回的文本

236
00:07:54,933 --> 00:07:56,966
插入到字幕内容的容器之中

237
00:07:57,000 --> 00:07:58,566
那我这里也给他对

238
00:07:58,700 --> 00:08:00,733
举了数据结构的例子

239
00:08:00,733 --> 00:08:02,333
我们复制这段提示词

240
00:08:02,333 --> 00:08:04,366
这里面我们上下文变更一下

241
00:08:04,800 --> 00:08:06,666
变更到content

242
00:08:06,666 --> 00:08:09,366
这js就是主程序的这个js

243
00:08:09,366 --> 00:08:10,333
好输入进去

244
00:08:10,333 --> 00:08:11,566
好它在生成的

245
00:08:11,566 --> 00:08:13,400
那这里面它会告诉你

246
00:08:13,600 --> 00:08:15,400
他修改了哪些的内容

247
00:08:15,400 --> 00:08:16,066
稍微等一下

248
00:08:16,066 --> 00:08:18,266
因为我们的提示词的内容比较多

249
00:08:18,266 --> 00:08:20,266
所以他需要有一些时间

250
00:08:20,400 --> 00:08:22,600
OK我们来验证一下程序有没有生效

251
00:08:22,600 --> 00:08:23,800
reload一下插件

252
00:08:23,866 --> 00:08:25,800
好只刷新一下网页

253
00:08:25,966 --> 00:08:27,566
点击生成中文总结

254
00:08:27,566 --> 00:08:28,933
好大家可以看到

255
00:08:28,966 --> 00:08:30,500
它已经按照我们的预期

256
00:08:30,500 --> 00:08:33,133
流式生成我们的总结内容了

257
00:08:33,666 --> 00:08:35,500
好那接下来最后一步

258
00:08:35,500 --> 00:08:37,600
我们是希望它生成完了之后

259
00:08:37,600 --> 00:08:40,700
往尾部添加一个复制的按钮

260
00:08:40,933 --> 00:08:42,533
我们再来验证一下

261
00:08:43,933 --> 00:08:45,700
好按钮已经出来了

262
00:08:45,700 --> 00:08:46,933
复制OK

263
00:08:46,933 --> 00:08:48,600
已经复制到剪贴板里面了

264
00:08:48,600 --> 00:08:50,733
这就是我们的中文总结

265
00:08:50,733 --> 00:08:51,400
的功能

266
00:08:51,400 --> 00:08:52,733
我们已经实现了

267